server.port=8081

spring.datasource.url = jdbc:mysql://111.229.128.239:3306/spring?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.jdbc.time_zone = UTC
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#\uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
#\uFFFD\uFFFD\uFFFD\u04F5\u0234\uFFFD\uFFFD\uFFFD\u02B1\u02B1\uFFFD\uFFFD
spring.datasource.maxWait=60000
#\uFFFD\uFFFD\uFFFD\u00F8\uFFFD\uFFFD\uFFFD\u00FD\uFFFD\uFFFD\uFFFD\u04BB\uFFFD\u03BC\uFFFD\uFFFD(\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0539\u0631\u0575\u013F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD)
spring.datasource.timeBetweenEvictionRunsMillis=60000
#\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u06B3\uFFFD\uFFFD\u0435\uFFFD\uFFFD\uFFFD\u0421\uFFFD\uFFFD\uFFFD\uFFFD\u02B1\uFFFD\uFFFD
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \uFFFD\uFFFDPSCache\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05B8\uFFFD\uFFFD\u00FF\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDPSCache\uFFFD\u0134\uFFFD\u0421
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \uFFFD\uFFFD\uFFFD\u00FC\uFFFD\uFFFD\u0373\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0635\uFFFDfilters\uFFFD\uFFFD\u0225\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u063D\uFFFD\uFFFD\uFFFDsql\uFFFD\u07B7\uFFFD\u0373\uFFFD\u01A3\uFFFD'wall'\uFFFD\uFFFD\uFFFD\u06B7\uFFFD\uFFFD\uFFFD\u01FD
spring.datasource.filters=stat,wall,log4j
# \u0368\uFFFD\uFFFDconnectProperties\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDmergeSql\uFFFD\uFFFD\uFFFD\u0723\uFFFD\uFFFD\uFFFDSQL\uFFFD\uFFFD\u00BC
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



#jpa \uFFFD\uFFFD\uFFFD\uFFFD


#\uFFFD\uFFFD\uFFFD\u077F\u2CBB\uFFFD\uFFFD\uFFFD\u06B6\uFFFD\u04E6\uFFFD\u0131\uFFFD\u02B1\uFFFD\uFFFD\uFFFD\u0536\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00F1\uFFFD
spring.jpa.hibernate.ddl-auto=update
#\uFFFD\uFFFD\u04E1sql\uFFFD\uFFFD\uFFFD
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

#\uFFFD\uFFFD\uFFFD Hibernate\u03AA\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u02B9\uFFFD\uFFFD\uFFFD\uFFFDLazy\uFFFD\uFFFD\uFFFD\u0623\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDsession\u02A7\u0427\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD org.hibernate.LazyInitializationException:  could not initialize proxy - no session
spring.jpa.open-in-view=true



#\uFFFD\uFFFD\uFFFD\uFFFDmapper\uFFFD\uFFFD\uFFFD\uFFFD
mybatis.type-aliases-package=com.liaoxx.spring_hello.mapper
#spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
#\uFFFD\uFFFD\uFFFD\uFFFD\u02B1\uFFFD\u0631\u057B\uFFFD\uFFFD\uFFFD,\uFFFD\uFFFD\u023B\u00FB\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u02B5\u02B1\u04B3\uFFFD\uFFFD
spring.thymeleaf.cache=false





#     ****redis \uFFFD\uFFFD\uFFFD\uFFFD****
spring.cache.type=REDIS
# Redis\uFFFD\uFFFD\uFFFD\u077F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u012C\uFFFD\uFFFD\u03AA0\uFFFD\uFFFD
spring.redis.database=0
# Redis\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05B7
spring.redis.host=localhost
# Redis\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04F6\u02FF\uFFFD
spring.redis.port=6379
# Redis\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uB8E8\u012C\uFFFD\uFFFD\u03AA\uFFFD\u0563\uFFFD
spring.redis.password=
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u02B9\uFFFD\u00F8\uFFFD\u05B5\uFFFD\uFFFD\u02BE\u00FB\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u01A3\uFFFD \u012C\uFFFD\uFFFD 8
spring.redis.lettuce.pool.max-active=8
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0234\uFFFD\u02B1\uFFFD\u48E8\u02B9\uFFFD\u00F8\uFFFD\u05B5\uFFFD\uFFFD\u02BE\u00FB\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u01A3\uFFFD \u012C\uFFFD\uFFFD -1
spring.redis.lettuce.pool.max-wait=-1ms
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\u0435\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD \u012C\uFFFD\uFFFD 8
spring.redis.lettuce.pool.max-idle=8
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\u0435\uFFFD\uFFFD\uFFFD\u0421\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD \u012C\uFFFD\uFFFD 0
spring.redis.lettuce.pool.min-idle=0
#
spring.data.redis.repositories.enabled = false

#RabbitMQ
spring.rabbitmq.virtual-host=/
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=15
spring.rabbitmq.listener.simple.prefetch=10

#To retry operations, you can enable retries on the AmqpTemplate (for example, in the event that the broker connection is lost)
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=2s




#app \uFFFD\uFFFD\uFFFD\u0536\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
spring.fileUpload.windows.imagePath=D:\\coding\\spring_hello\\src\\main\\resources\\public\\upload\\image\\
spring.fileUpload.linux.imagePath=/var/upload/image/

#

spring.servlet.multipart.max-file-size = 32768
spring.servlet.multipart.maxRequestSize=131072



# \u4EE3\u8868\u8FD9\u4E2AJWT\u7684\u63A5\u6536\u5BF9\u8C61,\u5B58\u5165audience
audience.clientId=098f6bcd4621d373cade4e832627b4f6
# \u5BC6\u94A5, \u7ECF\u8FC7Base64\u52A0\u5BC6, \u53EF\u81EA\u884C\u66FF\u6362
audience.base64Secret=MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=
# JWT\u7684\u7B7E\u53D1\u4E3B\u4F53\uFF0C\u5B58\u5165issuer
audience.name=localhost
# \u8FC7\u671F\u65F6\u95F4\uFF0C\u65F6\u95F4\u6233
audience.expiresSecond=172800



#actuator\u662FSpringBoot\u7684\u4E00\u4E2A\u9644\u52A0\u529F\u80FD,\u53EF\u5E2E\u52A9\u4F60\u5728\u5E94\u7528\u7A0B\u5E8F\u751F\u4EA7\u73AF\u5883\u65F6\u76D1\u89C6\u548C\u7BA1\u7406\u5E94\u7528\u7A0B\u5E8F\u3002\u53EF\u4EE5\u4F7F\u7528HTTP\u7684\u5404\u79CD\u8BF7\u6C42\u6765\u76D1\u7BA1,\u5BA1\u8BA1,\u6536\u96C6\u5E94\u7528\u7684\u8FD0\u884C\u60C5\u51B5\u3002
management.endpoints.web.exposure.include=*
